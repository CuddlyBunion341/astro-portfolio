---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
const allBlogPosts = await getCollection("blog");
const allProjects = await getCollection("projects");
import allTags from "../../data/tags.json";

const mergedTags = [...allTags];

const entryTags = [...allBlogPosts, ...allProjects]
  .map((entry) => entry.data.tags)
  .flat();

entryTags.forEach((tag) => {
  if (!mergedTags.find((t) => t.slug === tag)) {
    mergedTags.push({
      slug: tag,
      name: tag.replace(/\b\w/g, (l: string) => l.toUpperCase()),
      description: "",
    });
  }
});
---

<BaseLayout>
  <ul class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 p-4">
    {mergedTags.map(tag => {
      const projectCount = allProjects.filter(project => project.data.tags.includes(tag.slug)).length;
      const postCount = allBlogPosts.filter(post => post.data.tags.includes(tag.slug)).length;

      return (
        <li class="border border-gray-200 hover:border-blue-500 transition-colors duration-200 rounded p-4 flex flex-col items-start">
          <div class="flex items-center mb-2">
            {tag.icon ? <i class={`${tag.icon} text-4xl mr-2`} /> : <h2 class="text-2xl">{tag.name}</h2>}
          </div>
          <p class="mb-2">{tag.description}</p>
          <p class="mb-1">
            <a href={`/projects?tag=${tag.slug}`} class="text-blue-500 hover:underline">
              {projectCount} {projectCount === 1 ? 'Project' : 'Projects'}
            </a>
          </p>
          <p>
            <a href={`/blog?tag=${tag.slug}`} class="text-blue-500 hover:underline">
              {postCount} {postCount === 1 ? 'Post' : 'Posts'}
            </a>
          </p>
        </li>
      );
    })}
  </ul>
</BaseLayout>
