---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
const allBlogPosts = await getCollection("blog");
const allProjects = await getCollection("projects");
import allTags from "../../data/tags.json";

const entryTags = [...allBlogPosts, ...allProjects]
  .map((entry) => entry.data.tags)
  .flat();

const mergedTags = [...allTags];

entryTags.forEach((tag) => {
  if (!mergedTags.find((t) => t.slug === tag)) {
    mergedTags.push({
      slug: tag,
      name: tag.replace(/\b\w/g, (l: string) => l.toUpperCase()),
      description: "",
    });
  }
});

const getCountAndUrl = (
  items: { slug: string; collection: string; data: { tags: string[] } }[],
  tag: { slug: string },
) => {
  const itemsWithTag = items.filter((item) =>
    item.data.tags.includes(tag.slug),
  );
  const count = itemsWithTag.length;
  if (count === 0) return { count: 0, url: "#" };
  const url =
    count === 1
      ? `/${items[0]?.collection}/${itemsWithTag[0]?.slug}`
      : `/${items[0]?.collection}/tags/${tag.slug}`;

  return { count, url };
};

const pluralize = (count: number, word: string) =>
  count === 1 ? word : `${word}s`;
---

<BaseLayout>
  <ul class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
    {
      mergedTags.map((tag) => {
        const { count: projectCount, url: projectUrl } = getCountAndUrl(
          allProjects,
          tag,
        );
        const { count: postCount, url: postUrl } = getCountAndUrl(
          allBlogPosts,
          tag,
        );

        return (
          <li class="border border-gray-200 hover:border-blue-500 transition-colors duration-200 rounded p-4 flex flex-col items-start">
            <div class="flex items-center mb-2">
              {tag.icon ? (
                <i class={`${tag.icon} text-4xl mr-2`} />
              ) : (
                <h2 class="text-2xl">{tag.name}</h2>
              )}
            </div>
            <p class="mb-2">{tag.description}</p>
            <p>
              {projectCount > 0 && (
                <a href={projectUrl} class="text-blue-500 hover:underline">
                  {projectCount} {pluralize(projectCount, "Project")}
                </a>
              )}
              {projectCount > 0 && postCount > 0 && "<br>"}
              {postCount > 0 && (
                <a href={postUrl} class="text-blue-500 hover:underline">
                  {postCount} {pluralize(postCount, "Post")}
                </a>
              )}
              {postCount > 0 && projectCount > 0 && "<br>"}
              {postCount > 0 && projectCount > 0 && (
                <a
                  class="text-blue-500 hover:underline"
                  href={`/tags/${tag.slug}`}
                >
                  Show both
                </a>
              )}
            </p>
          </li>
        );
      })
    }
  </ul>
</BaseLayout>
